# -*- coding: utf-8 -*-
"""
Created on Fri Jul 11 12:45:30 2025

@author: Isabella Buck

This script permutes a percentage of bases in enhancer sequences.
You can adjust the percentage and output directory as needed.
"""

import numpy as np
import os

amount = 5  # Percentage of bases to permute
output_dir = r"C:\Users\izzye\OneDrive - Johns Hopkins\Documents\BRIGHT\proj\enhancers"  # Directory to save permuted FASTA files

# Create output directory if it doesn't exist
os.makedirs(output_dir, exist_ok=True)

# Dictionary of enhancer sequences
enhancers = {
    "IntP2B": 'TATTACCCCCTCCCCTCGACCGGCGGAACGTCGATGGGACAAAAAGTTAATAACATATTTGTGTCAGCTTTAGCATTAAAAAAAACATCTTTTTTTTCATAACATCGATATACGAAGCACCGTGCGACCACTTCCCGCAATCAGATTGATTCACACCGAACAAATCACGTTCAAACACACACCCCAATGAACGCCGAAAATGGTCCATGCAGATCGATATGAAAAATTGATCGAATCATCATTGTAATGTTCACGTCCATCCGGATCCATTCCGGACGGAGCTGCTTTCATTGTGGGAAAATTTATTCATACGCACGAAGTTCTCCTAGGGCGGAGAGGTGAGACCTACAACAAATTGAGGTCTCTATTTTCTTTGCTCACGTTCGTCTTGTTCTGGTCGCATACGTAACATATCTATATGTAGACCAGCCTAGAACCCAGACATGTGTCAACGGTAGCCAAAACGGATTTCGCACTCTCTGGTGGTTGTTTTTTGTTCGTAAAGTATCACGCACTTCCGATCTTTACTCACTTTAGTTGATTGATTGGTTGTGTTGACAGCAAGAATGATCAGCGATGTGAGATTATTCAGAAGATTCCACGCTGAGGAAGAAAGGGTTGAGACGAACAAGACGCCCGCATTGCGGGTTTGATTACATTGTGTCGTATGGAGTTGTTGGATTTTCCTTGATCATGTGAAGAATTTGAGTAAGCCATCATATCAGTTTGTCACACAACAACATACTTCATATTTGAACGTATTTCATTACAAACTCACTTTACTTCAATGCACGGTGAGAAATTGCAAAAAAAAACTACTAAATTG',
    "IntP2A": 'CGTATCTGGACCACTGTGCAGTGCAGTATGGTAAAATATTCTATGGCTTTAACTCGGTAGTCTAGTCTGCTTCATGGTAGTGGACGGTGGACACGTAGGTTCTAGCGAAGAACCATACGGAAGGGGTGTGCGCGGTGCCAGTCGCTGGGCTGGCTGGAAACAGCCACCAAGAACAGAACGGCCAAAGCCAAAGCCACTACATACAACGTTGTTGCATATTTACTGTATCAAAATGAAAACTACTTTTCAAAACAATCCGTGACTTTATGGCAGTATTTGGGCTGTGGAGATCTATCTACCCTTTGCTGCCGCTGCCTGGCGAGTGACTTTATCTGCAACCTATTTTTGTTCGTTCGTTACGAGACTTAATAAGCTTATCCTGGCTTTGGGCATGCTTCGAAGTGACGAATGAATGAACTTGAAGGTGAGATGGATGACTACTAGATGTAACCATCCGCGGGCAAAGTCACGTTGCCAACAACGGTCGCTCTCCCAGCCGAATGCCAACTTCGACATAATTCCAGAAGCTCTTTTGTATCGATTTGTTAACGGACGCACGG',
    "st10": 'AATTGTTTATCTATAAAATGATATCAGTAACCACAGAAGCCGCCAGGCTTAGGGACTCAAATTTCAACAAAGTGTCAAGCATTTTCGCTGAGTGCACACCTAGGTCACACATATGTGCCGGTGTCTTCAATGTCATGTCCCCTTGTCACGTGAAATCAAATCATGCATCACAATTTCACGCTCAATCGCCAATGTAATTGAGCCGCACAGCCGTCCCCGTTCCTTTAAGTATTTAACAATCCCAGGTTGTCGTCCAACTGCCGCCACTATGTCTGCCACAAATCCAATTGGTTGCCCCAGCTCTGCCATGAATCCGGGATCGTTGCTGGGTTTTCCGGTCGCCCAGCTTCCGTAAAAACAAAATCGAAGGGGTGGCATCCATGCGTGAATTGCAGCTGGAGCAACAGTTAAGCAATTTTCACACCCAAAATGTATACGTATTTATATAGAGGGATCTGCTGAAATATTTTTCTAATTTCTACAACTATTGGTTAATGGCATAATTTATGCGAGAACACGAACTCCTAGCACTGTGGCACATACCTTACTCTGTGTTTTCGGTTTGGTCCTGGCCACATGTCCTGTGTCCATTGTTTGGATCACGTTCCCGCGCCGATATCGAATCGGTTCGATCTCGGAGGCAACTTTGTTTCCAAGTGAACAGCGTTGTCGAATAACTGAGATCCTGGCTTGCATC',
    "st10R": 'TCCGTAAAAACAAAATCGAAGGGGTGGCATCCATGCGTGAATTGCAGCTGGAGCAACAGTTAAGCAATTTTCACACCCAAAATGTATACGTATTTATATAGAGGGATCTGCTGAAATATTTTTCTAATTTCTACAACTATTGGTTAATGGCATAATTTATGCGAGAACACGAACTCCTAGCACTGTGGCACATACCTTACTCTGTGTTTTCGGTTTGGTCCTGGCCACATGTCCTGTGTCCATTGTTTGGATCACGTTCCCGCGCCGATATCGAATCGGTTCGATCTCGGAGGCAACTTTGTTTCCAAGTGAACAGCGTTGTCGAATAACTGAGATCCTGGCTTGCATC',
    "pCRM": 'CAACTTTTTTCAATTTTTTTTATTTTCTCATTTACGCCGAAACTATTCGAAAAAGTATAATCAAAGTTTTCCTAAAGTTGGAAAACAGGTCAGTGGGCTGCACTGTTTTATTTACAAAAGATTCTTAACAGATATCGCTCTAATAAATCACCCTTTCGTCGAATAATTCTGTAATTGGTCTAAAGGTCACGTTTTGGCTAGTGTTAACAGCGTTCAAATCACGTCCGTTTGTTATTATCCAGATAAATACAAAGTATCATGGATGGTAATGTTGCATGTAATCTAAATTTGCACTTACTAGCCAGCTGGATAAATATACCATTGTTAATTATTGCTTTAGACACGTACGCAGATTACCAGGATATTAGCTCATGATGGAACGCTTATTATTCCACCTCCACTCGCAACAAATTGCGCTCTTTTTCTCGACTTTTACGCCGAAGAAATCGGCGAAAATTTTCCAACCTGCTGTCACAGGTAATTTGGGAATTCCGAGGTACAAACCCCAAACATCTGGAAGCAATTGAGCAAAACACCTTGATGTATTTATACAACCTGCTCATTTGAATTTTAGTATTTGAGAGTCGAGGCGTGCTCAGGTTCTCACACTTTTGGCAAGTGTTATTGCAACTACAGGAAATTGTCAATAAGAAGGGCCGAAACAATAAAAACTAGGTAAGACGGGCCCCAGGCACGTTCTCGAAATTTTCATGAATGGCTCCGTAGTAAACCGGTAAAAAAGGCCAACAATCCCAAAAATGCCGATGAAATTTTTGAAAGTCTCGCGATTTTCAGCGAAGCCATGCGGCTGAAAATTCCGGGAAGCGAGTTTATGTCCCTCATCGAATCCTTCAACTTTAATTGCTCACGACCGGTAATTTCTTCTTCATATTTTAGTTTAATAAATTGTGCCCGATAATTGTTTCCAATTTCTAAGCGTTGGCATGGTGTGAATTATCGCGACTATAAATCATTTTATAGAAAATTATAATCGCTGGAAATAATTTATTTGCAAAGTTACGGTGAGAGCGTAATTTTTGCCACATAAACGCAGACAATATGTGGCCTATTTGTGGCCTATCCATAAATAGATATTATTTATTTCATTGTTAGGATACTGAGTACAACTATAACTTCCTGGTGGGTATTCAAATGACGTTCCAAGAAGCAGCACACAATTGGACACCGTGTATAAAAAATTATGAAACCGTGCTAGTTTTCTGTTAAACACTGCTTTGTAACGTTAAATTT',
    "Peak9820": 'CCGTGCAGCCATTCCATTGAAAGAATTTTATCAATGAAATTCCACGGGTTTTTCCCGATTCGAATGACGATCAGGGGAATCGTCTGCAGCGGAAACACCAGCAGCGCATAGTACAAGCGTACAGAGGTATACGTGCAAGTCTCTATGGAGTCTCGGAAGGTATGTGCCAAATGCACGGTCAAGAGATTTGCTGGTCGTGACTTTTTCGAGAATTCGGTATTCCACGTCACGTACGATGATTTGTTTTTGAAATGGTTTGTGCCATTCTGCTCGGCTCAGGAATGGGCGCCCGTCGTCGGGTTGGTCGGGAGGGTGATTTATCCAGAACCGGCCAGACGAAGAGTTCT',
    "Peak9821": 'ATCTGCTCTAGTTCACGCAAAGGTCAATCGGGCAATATTTTCTGGAAATAAACCGAGAACGAGTGTGTGGCATCAGATTTGTTTTTTTTTTCTATTCAAGGCCGGATTATTTCTCATTCATTTATGTCAGCAAACGAGGCGTATTCCCCTTGGCAATATGTGTATGTTACCT'
}

def permute(seq, x):
    """
    Permute x% of the bases in seq, leaving the rest unchanged.
    """
    seq = np.array(list(seq))
    n = len(seq)
    num_bases = int(n * x / 100)
    indices = np.random.choice(n, num_bases, replace=False)
    bases = seq[indices]
    np.random.shuffle(bases)
    seq[indices] = bases
    return ''.join(seq)

# Permute each enhancer and save to FASTA file
for name, dna in enhancers.items():
    new_dna = permute(dna, amount)
    print(f"Original ({name}):", dna)
    print(f"Permuted ({name}, {amount}%):", new_dna)
    output_path = os.path.join(output_dir, f"{name}_{amount}.fa")
    with open(output_path, "w") as f:
        f.write(f">{name}_{amount}\n")
        f.write(new_dna + "\n")